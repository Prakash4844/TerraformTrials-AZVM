┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:46:25 PM IST]
╰─>$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/random versions matching "~> 3.0"...
- Finding hashicorp/tls versions matching "~> 4.0"...
- Finding hashicorp/azurerm versions matching "~> 2.0"...
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)
- Installing hashicorp/tls v4.0.4...
- Installed hashicorp/tls v4.0.4 (signed by HashiCorp)
- Installing hashicorp/azurerm v2.99.0...
- Installed hashicorp/azurerm v2.99.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:48:43 PM IST]
╰─>$ terraform plan -out terraform_plan.tfplan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with
the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.lnx-tf-vm will be created
  + resource "azurerm_linux_virtual_machine" "lnx-tf-vm" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = "lnx-tf-vm"
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus"
      + max_bid_price                   = -1
      + name                            = "lnx-tf-vm"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = (known after apply)
      + size                            = "Standard_B1s"
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = (known after apply)
          + username   = "azureuser"
        }

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "lnx-tf-vm-osdisk"
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts-gen2"
          + version   = "latest"
        }
    }

  # azurerm_network_interface.terraform_nic will be created
  + resource "azurerm_network_interface" "terraform_nic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "lnx-tf-nic"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = (known after apply)
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "nic_configuration"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.lnx-tf-nic-nsg will be created
  + resource "azurerm_network_interface_security_group_association" "lnx-tf-nic-nsg" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.terraform_nsg will be created
  + resource "azurerm_network_security_group" "terraform_nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "lnx-tf-nsg"
      + resource_group_name = (known after apply)
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "ssh"
              + priority                                   = 300
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # azurerm_public_ip.terraform_public_ip will be created
  + resource "azurerm_public_ip" "terraform_public_ip" {
      + allocation_method       = "Dynamic"
      + availability_zone       = (known after apply)
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "lnx-tf-pip"
      + resource_group_name     = (known after apply)
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + zones                   = (known after apply)
    }

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = (known after apply)
    }

  # azurerm_storage_account.storage_account will be created
  + resource "azurerm_storage_account" "storage_account" {
      + access_tier                       = (known after apply)
      + account_kind                      = "StorageV2"
      + account_replication_type          = "LRS"
      + account_tier                      = "Standard"
      + allow_blob_public_access          = false
      + enable_https_traffic_only         = true
      + id                                = (known after apply)
      + infrastructure_encryption_enabled = false
      + is_hns_enabled                    = false
      + large_file_share_enabled          = (known after apply)
      + location                          = "eastus"
      + min_tls_version                   = "TLS1_0"
      + name                              = (known after apply)
      + nfsv3_enabled                     = false
      + primary_access_key                = (sensitive value)
      + primary_blob_connection_string    = (sensitive value)
      + primary_blob_endpoint             = (known after apply)
      + primary_blob_host                 = (known after apply)
      + primary_connection_string         = (sensitive value)
      + primary_dfs_endpoint              = (known after apply)
      + primary_dfs_host                  = (known after apply)
      + primary_file_endpoint             = (known after apply)
      + primary_file_host                 = (known after apply)
      + primary_location                  = (known after apply)
      + primary_queue_endpoint            = (known after apply)
      + primary_queue_host                = (known after apply)
      + primary_table_endpoint            = (known after apply)
      + primary_table_host                = (known after apply)
      + primary_web_endpoint              = (known after apply)
      + primary_web_host                  = (known after apply)
      + queue_encryption_key_type         = "Service"
      + resource_group_name               = (known after apply)
      + secondary_access_key              = (sensitive value)
      + secondary_blob_connection_string  = (sensitive value)
      + secondary_blob_endpoint           = (known after apply)
      + secondary_blob_host               = (known after apply)
      + secondary_connection_string       = (sensitive value)
      + secondary_dfs_endpoint            = (known after apply)
      + secondary_dfs_host                = (known after apply)
      + secondary_file_endpoint           = (known after apply)
      + secondary_file_host               = (known after apply)
      + secondary_location                = (known after apply)
      + secondary_queue_endpoint          = (known after apply)
      + secondary_queue_host              = (known after apply)
      + secondary_table_endpoint          = (known after apply)
      + secondary_table_host              = (known after apply)
      + secondary_web_endpoint            = (known after apply)
      + secondary_web_host                = (known after apply)
      + shared_access_key_enabled         = true
      + table_encryption_key_type         = "Service"
    }

  # azurerm_subnet.terraform_subnet will be created
  + resource "azurerm_subnet" "terraform_subnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "10.1.0.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "subnet0"
      + resource_group_name                            = (known after apply)
      + virtual_network_name                           = "lnx-tf-vnet"
    }

  # azurerm_virtual_network.terraform_network will be created
  + resource "azurerm_virtual_network" "terraform_network" {
      + address_space         = [
          + "10.1.0.0/16",
        ]
      + dns_servers           = (known after apply)
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "eastus"
      + name                  = "lnx-tf-vnet"
      + resource_group_name   = (known after apply)
      + subnet                = (known after apply)
      + vm_protection_enabled = false
    }

  # random_id.random_id will be created
  + resource "random_id" "random_id" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 8
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
      + keepers     = {
          + "resource_group" = (known after apply)
        }
    }

  # random_pet.rg_name will be created
  + resource "random_pet" "rg_name" {
      + id        = (known after apply)
      + length    = 2
      + prefix    = "rg"
      + separator = "-"
    }

  # tls_private_key.lnx-tf-ssh will be created
  + resource "tls_private_key" "lnx-tf-ssh" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + private_key_pem_pkcs8         = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 4096
    }

Plan: 12 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip_address   = (known after apply)
  + resource_group_name = (known after apply)
  + tls_private_key     = (sensitive value)

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Saved the plan to: terraform_plan.tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "terraform_plan.tfplan"
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:52:32 PM IST]
╰─>$ terraform apply "terraform_plan.tfplan"
tls_private_key.lnx-tf-ssh: Creating...
random_pet.rg_name: Creating...
random_pet.rg_name: Creation complete after 0s [id=rg-next-fawn]
tls_private_key.lnx-tf-ssh: Creation complete after 3s [id=0cb0a8e457a5c5b6161c8462cd856d6143b46712]
azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Creation complete after 3s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn]
azurerm_virtual_network.terraform_network: Creating...
azurerm_network_security_group.terraform_nsg: Creating...
azurerm_public_ip.terraform_public_ip: Creating...
random_id.random_id: Creating...
random_id.random_id: Creation complete after 0s [id=3xmXgIkVo4s]
azurerm_storage_account.storage_account: Creating...
azurerm_network_security_group.terraform_nsg: Creation complete after 10s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/networkSecurityGroups/lnx-tf-nsg]
azurerm_virtual_network.terraform_network: Still creating... [10s elapsed]
azurerm_public_ip.terraform_public_ip: Still creating... [10s elapsed]
azurerm_storage_account.storage_account: Still creating... [10s elapsed]
azurerm_public_ip.terraform_public_ip: Creation complete after 12s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/publicIPAddresses/lnx-tf-pip]
azurerm_virtual_network.terraform_network: Creation complete after 16s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/virtualNetworks/lnx-tf-vnet]
azurerm_subnet.terraform_subnet: Creating...
azurerm_storage_account.storage_account: Still creating... [20s elapsed]
azurerm_subnet.terraform_subnet: Still creating... [10s elapsed]
azurerm_subnet.terraform_subnet: Creation complete after 11s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/virtualNetworks/lnx-tf-vnet/subnets/subnet0]
azurerm_network_interface.terraform_nic: Creating...
azurerm_storage_account.storage_account: Still creating... [30s elapsed]
azurerm_network_interface.terraform_nic: Creation complete after 8s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/networkInterfaces/lnx-tf-nic]
azurerm_network_interface_security_group_association.lnx-tf-nic-nsg: Creating...
azurerm_storage_account.storage_account: Still creating... [40s elapsed]
azurerm_storage_account.storage_account: Creation complete after 42s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Storage/storageAccounts/diagdf1997808915a38b]
azurerm_linux_virtual_machine.lnx-tf-vm: Creating...
azurerm_network_interface_security_group_association.lnx-tf-nic-nsg: Creation complete after 8s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/networkInterfaces/lnx-tf-nic|/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Network/networkSecurityGroups/lnx-tf-nsg]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [50s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [1m0s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [1m10s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [1m20s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Still creating... [1m30s elapsed]
azurerm_linux_virtual_machine.lnx-tf-vm: Creation complete after 1m31s [id=/subscriptions/0b645430-10c3-41a5-b7e1-03948b93c38c/resourceGroups/rg-next-fawn/providers/Microsoft.Compute/virtualMachines/lnx-tf-vm]

Apply complete! Resources: 12 added, 0 changed, 0 destroyed.

Outputs:

public_ip_address = "13.90.80.143"
resource_group_name = "rg-next-fawn"
tls_private_key = <sensitive>
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:58:04 PM IST]
╰─>$ terraform output -raw tls_private_key > id_rsa
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:58:39 PM IST]
╰─>$ ssh -i ./id_rsa azureuser@13.90.80.143
The authenticity of host '13.90.80.143 (13.90.80.143)' can't be established.
ED25519 key fingerprint is SHA256:t0T4RG6ecJVnrorPkHbfl1Yszjn7f+6/hfGN/ovMLd4.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '13.90.80.143' (ED25519) to the list of known hosts.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for './id_rsa' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key "./id_rsa": bad permissions
azureuser@13.90.80.143: Permission denied (publickey).
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[05:59:38 PM IST]
╰─>$ chmod 400 ./id_rsa 
┬─[zaphkiel@Kurumi:~/D/G/TerraformTrials-AZVM]─[06:00:05 PM IST]
╰─>$ ssh -i ./id_rsa azureuser@13.90.80.143
Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-1041-azure x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Mon Sep  4 12:30:18 UTC 2023

  System load:  0.1337890625      Processes:             102
  Usage of /:   5.0% of 28.89GB   Users logged in:       0
  Memory usage: 29%               IPv4 address for eth0: 10.1.0.4
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.*/

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

azureuser@lnx-tf-vm:~$ echo "This is an AZURE VM Created With Terraform"
This is an AZURE VM Created With Terraform
azureuser@lnx-tf-vm:~$ 